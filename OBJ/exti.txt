; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\exti.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\exti.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\ATK-ESP8266 -I..\CORE -I..\FATFS\src -I..\FATFS\exfuns -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\LED -I..\HARDWARE\SDIO -I..\HARDWARE\SPI -I..\HARDWARE\TIMER -I..\HARDWARE\TOUCH -I..\HARDWARE\USART3 -I..\HARDWARE\W25QXX -I..\MALLOC -I..\STM32F10x_FWLib\inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\TEXT -I..\USER -I..\USMART -I..\PICTURE -I..\HARDWARE\OV7725 -I..\HARDWARE\EXTI -I..\HARDWARE\BEEP -I..\HARDWARE\DHT11 -I.\RTE\_Target_1 -ID:\Users\86132\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\exti.crf ..\HARDWARE\EXTI\exti.c]
                          THUMB

                          AREA ||i.EXTI0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI0_IRQHandler PROC
;;;59     
;;;7      void EXTI0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;8      {
;;;9      	delay_ms(10);	//消抖
000002  200a              MOVS     r0,#0xa
000004  f7fffffe          BL       delay_ms
;;;10     	if(WK_UP==1)	//WK_UP按键
000008  2101              MOVS     r1,#1
00000a  4808              LDR      r0,|L1.44|
00000c  f7fffffe          BL       GPIO_ReadInputDataBit
000010  2801              CMP      r0,#1
000012  d107              BNE      |L1.36|
;;;11     	{				 
;;;12     		BEEP=!BEEP;	
000014  4806              LDR      r0,|L1.48|
000016  6800              LDR      r0,[r0,#0]
000018  b908              CBNZ     r0,|L1.30|
00001a  2001              MOVS     r0,#1
00001c  e000              B        |L1.32|
                  |L1.30|
00001e  2000              MOVS     r0,#0
                  |L1.32|
000020  4903              LDR      r1,|L1.48|
000022  6008              STR      r0,[r1,#0]
                  |L1.36|
;;;13     	}		 
;;;14       EXTI_ClearITPendingBit(EXTI_Line0);  //清除EXTI0线路挂起位  
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       EXTI_ClearITPendingBit
;;;15     }
00002a  bd10              POP      {r4,pc}
;;;16      
                          ENDP

                  |L1.44|
                          DCD      0x40010800
                  |L1.48|
                          DCD      0x422181a0

                          AREA ||i.EXTI3_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI3_IRQHandler PROC
;;;17     //外部中断3服务程序
;;;18     void EXTI3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;19     {
;;;20     	delay_ms(10);	//消抖
000002  200a              MOVS     r0,#0xa
000004  f7fffffe          BL       delay_ms
;;;21     	if(KEY1==0)	 	//按键KEY1
000008  2108              MOVS     r1,#8
00000a  4808              LDR      r0,|L2.44|
00000c  f7fffffe          BL       GPIO_ReadInputDataBit
000010  b938              CBNZ     r0,|L2.34|
;;;22     	{				 
;;;23     		LED1=!LED1;
000012  4807              LDR      r0,|L2.48|
000014  6800              LDR      r0,[r0,#0]
000016  b908              CBNZ     r0,|L2.28|
000018  2001              MOVS     r0,#1
00001a  e000              B        |L2.30|
                  |L2.28|
00001c  2000              MOVS     r0,#0
                  |L2.30|
00001e  4904              LDR      r1,|L2.48|
000020  6008              STR      r0,[r1,#0]
                  |L2.34|
;;;24     	}		 
;;;25     	EXTI_ClearITPendingBit(EXTI_Line3);  //清除EXTI0线路挂起位
000022  2008              MOVS     r0,#8
000024  f7fffffe          BL       EXTI_ClearITPendingBit
;;;26     }
000028  bd10              POP      {r4,pc}
;;;27     //外部中断4服务程序
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x40011800
                  |L2.48|
                          DCD      0x42230194

                          AREA ||i.EXTI4_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI4_IRQHandler PROC
;;;27     //外部中断4服务程序
;;;28     void EXTI4_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;29     {
;;;30     	delay_ms(10);	//消抖
000002  200a              MOVS     r0,#0xa
000004  f7fffffe          BL       delay_ms
;;;31     	if(KEY0==0)	 	//按键KEY0
000008  2110              MOVS     r1,#0x10
00000a  4808              LDR      r0,|L3.44|
00000c  f7fffffe          BL       GPIO_ReadInputDataBit
000010  b938              CBNZ     r0,|L3.34|
;;;32     	{
;;;33     		LED0=!LED0;
000012  4807              LDR      r0,|L3.48|
000014  6800              LDR      r0,[r0,#0]
000016  b908              CBNZ     r0,|L3.28|
000018  2001              MOVS     r0,#1
00001a  e000              B        |L3.30|
                  |L3.28|
00001c  2000              MOVS     r0,#0
                  |L3.30|
00001e  4904              LDR      r1,|L3.48|
000020  6008              STR      r0,[r1,#0]
                  |L3.34|
;;;34     	}		 
;;;35     	EXTI_ClearITPendingBit(EXTI_Line4);  //清除EXTI0线路挂起位
000022  2010              MOVS     r0,#0x10
000024  f7fffffe          BL       EXTI_ClearITPendingBit
;;;36     }		   
000028  bd10              POP      {r4,pc}
;;;37     //外部中断初始化程序
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      0x40011800
                  |L3.48|
                          DCD      0x42218194

                          AREA ||i.EXTI8_Init||, CODE, READONLY, ALIGN=1

                  EXTI8_Init PROC
;;;117    //外部中断8初始化
;;;118    void EXTI8_Init(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;119    {												  
;;;120    	EXTI_InitTypeDef EXTI_InitStructure;
;;;121    	NVIC_InitTypeDef NVIC_InitStructure;
;;;122    	
;;;123      GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource8);//PA8对中断线8
000002  2108              MOVS     r1,#8
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       GPIO_EXTILineConfig
;;;124     	   	 
;;;125    	EXTI_InitStructure.EXTI_Line=EXTI_Line8;
00000a  f44f7080          MOV      r0,#0x100
00000e  9001              STR      r0,[sp,#4]
;;;126      EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;	
000010  2000              MOVS     r0,#0
000012  f88d0008          STRB     r0,[sp,#8]
;;;127      EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
000016  2008              MOVS     r0,#8
000018  f88d0009          STRB     r0,[sp,#9]
;;;128      EXTI_InitStructure.EXTI_LineCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d000a          STRB     r0,[sp,#0xa]
;;;129      EXTI_Init(&EXTI_InitStructure);		//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器
000022  a801              ADD      r0,sp,#4
000024  f7fffffe          BL       EXTI_Init
;;;130    	
;;;131    	NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;			//使能按键所在的外部中断通道
000028  2017              MOVS     r0,#0x17
00002a  f88d0000          STRB     r0,[sp,#0]
;;;132      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;	//抢占优先级0 
00002e  2000              MOVS     r0,#0
000030  f88d0001          STRB     r0,[sp,#1]
;;;133      NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;					//子优先级0 
000034  f88d0002          STRB     r0,[sp,#2]
;;;134      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;								//使能外部中断通道
000038  2001              MOVS     r0,#1
00003a  f88d0003          STRB     r0,[sp,#3]
;;;135      NVIC_Init(&NVIC_InitStructure);  	  //根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器   
00003e  4668              MOV      r0,sp
000040  f7fffffe          BL       NVIC_Init
;;;136    }
000044  bd0e              POP      {r1-r3,pc}
;;;137    
                          ENDP


                          AREA ||i.EXTI9_5_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI9_5_IRQHandler PROC
;;;97      //外部中断5~9服务程序
;;;98     void EXTI9_5_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;99     {		 		
;;;100    	if(EXTI_GetITStatus(EXTI_Line8)==SET)	//是8线的中断
000002  f44f7080          MOV      r0,#0x100
000006  f7fffffe          BL       EXTI_GetITStatus
00000a  2801              CMP      r0,#1
00000c  d11e              BNE      |L5.76|
;;;101    	{      
;;;102    		if(ov_sta==0)
00000e  4812              LDR      r0,|L5.88|
000010  7800              LDRB     r0,[r0,#0]  ; ov_sta
000012  b978              CBNZ     r0,|L5.52|
;;;103    		{
;;;104    			OV7725_WRST=0;  //复位写指针     
000014  2000              MOVS     r0,#0
000016  4911              LDR      r1,|L5.92|
000018  6008              STR      r0,[r1,#0]
;;;105    			OV7725_WRST=1;  
00001a  2001              MOVS     r0,#1
00001c  4910              LDR      r1,|L5.96|
00001e  f8c10198          STR      r0,[r1,#0x198]
;;;106    			OV7725_WREN=1;  //允许写入FIFO   
000022  4910              LDR      r1,|L5.100|
000024  f8c1018c          STR      r0,[r1,#0x18c]
;;;107    			ov_sta++;		//帧中断加1 
000028  480b              LDR      r0,|L5.88|
00002a  7800              LDRB     r0,[r0,#0]  ; ov_sta
00002c  1c40              ADDS     r0,r0,#1
00002e  490a              LDR      r1,|L5.88|
000030  7008              STRB     r0,[r1,#0]
000032  e00b              B        |L5.76|
                  |L5.52|
;;;108    		}
;;;109    		else if(ov_sta==1)
000034  4808              LDR      r0,|L5.88|
000036  7800              LDRB     r0,[r0,#0]  ; ov_sta
000038  2801              CMP      r0,#1
00003a  d107              BNE      |L5.76|
;;;110    		{
;;;111    			OV7725_WREN=0;  //暂时禁止写入FIFO，否则读的图是碎的
00003c  2000              MOVS     r0,#0
00003e  490a              LDR      r1,|L5.104|
000040  6008              STR      r0,[r1,#0]
;;;112    			ov_sta++;
000042  4805              LDR      r0,|L5.88|
000044  7800              LDRB     r0,[r0,#0]  ; ov_sta
000046  1c40              ADDS     r0,r0,#1
000048  4903              LDR      r1,|L5.88|
00004a  7008              STRB     r0,[r1,#0]
                  |L5.76|
;;;113    		}
;;;114    	}
;;;115    	EXTI_ClearITPendingBit(EXTI_Line8);  //清除EXTI8线路挂起位						  
00004c  f44f7080          MOV      r0,#0x100
000050  f7fffffe          BL       EXTI_ClearITPendingBit
;;;116    } 
000054  bd10              POP      {r4,pc}
;;;117    //外部中断8初始化
                          ENDP

000056  0000              DCW      0x0000
                  |L5.88|
                          DCD      ov_sta
                  |L5.92|
                          DCD      0x42228198
                  |L5.96|
                          DCD      0x42228000
                  |L5.100|
                          DCD      0x42218000
                  |L5.104|
                          DCD      0x4221818c

                          AREA ||i.EXTIX_Init||, CODE, READONLY, ALIGN=1

                  EXTIX_Init PROC
;;;38     //初始化PA0/PE2/PE3/PE4为中断输入.
;;;39     void EXTIX_Init(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;40     {
;;;41     	EXTI_InitTypeDef EXTI_InitStructure;
;;;42      	NVIC_InitTypeDef NVIC_InitStructure;
;;;43     
;;;44       KEY_Init();	 //	按键端口初始化
000002  f7fffffe          BL       KEY_Init
;;;45     
;;;46      
;;;47     
;;;48      //GPIOE.3	  中断线以及中断初始化配置 下降沿触发
;;;49       GPIO_EXTILineConfig(GPIO_PortSourceGPIOE,GPIO_PinSource3);
000006  2103              MOVS     r1,#3
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       GPIO_EXTILineConfig
;;;50     
;;;51       EXTI_InitStructure.EXTI_Line=EXTI_Line3;
00000e  2008              MOVS     r0,#8
000010  9001              STR      r0,[sp,#4]
;;;52       EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;	
000012  2000              MOVS     r0,#0
000014  f88d0008          STRB     r0,[sp,#8]
;;;53       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
000018  200c              MOVS     r0,#0xc
00001a  f88d0009          STRB     r0,[sp,#9]
;;;54       EXTI_InitStructure.EXTI_LineCmd = ENABLE;
00001e  2001              MOVS     r0,#1
000020  f88d000a          STRB     r0,[sp,#0xa]
;;;55       EXTI_Init(&EXTI_InitStructure);	  	//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器
000024  a801              ADD      r0,sp,#4
000026  f7fffffe          BL       EXTI_Init
;;;56     
;;;57      //GPIOE.4	  中断线以及中断初始化配置  下降沿触发
;;;58       GPIO_EXTILineConfig(GPIO_PortSourceGPIOE,GPIO_PinSource4);
00002a  2104              MOVS     r1,#4
00002c  4608              MOV      r0,r1
00002e  f7fffffe          BL       GPIO_EXTILineConfig
;;;59     
;;;60       EXTI_InitStructure.EXTI_Line=EXTI_Line4;
000032  2010              MOVS     r0,#0x10
000034  9001              STR      r0,[sp,#4]
;;;61       EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;	
000036  2000              MOVS     r0,#0
000038  f88d0008          STRB     r0,[sp,#8]
;;;62       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
00003c  200c              MOVS     r0,#0xc
00003e  f88d0009          STRB     r0,[sp,#9]
;;;63       EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000042  2001              MOVS     r0,#1
000044  f88d000a          STRB     r0,[sp,#0xa]
;;;64       EXTI_Init(&EXTI_InitStructure);	  	//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器
000048  a801              ADD      r0,sp,#4
00004a  f7fffffe          BL       EXTI_Init
;;;65     
;;;66     
;;;67       //GPIOA.0	  中断线以及中断初始化配置 上升沿触发
;;;68      	GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource0);
00004e  2100              MOVS     r1,#0
000050  4608              MOV      r0,r1
000052  f7fffffe          BL       GPIO_EXTILineConfig
;;;69     
;;;70      	EXTI_InitStructure.EXTI_Line=EXTI_Line0;
000056  2001              MOVS     r0,#1
000058  9001              STR      r0,[sp,#4]
;;;71       EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;	
00005a  2000              MOVS     r0,#0
00005c  f88d0008          STRB     r0,[sp,#8]
;;;72       EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
000060  2008              MOVS     r0,#8
000062  f88d0009          STRB     r0,[sp,#9]
;;;73       EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000066  2001              MOVS     r0,#1
000068  f88d000a          STRB     r0,[sp,#0xa]
;;;74       EXTI_Init(&EXTI_InitStructure);		//根据EXTI_InitStruct中指定的参数初始化外设EXTI寄存器
00006c  a801              ADD      r0,sp,#4
00006e  f7fffffe          BL       EXTI_Init
;;;75     
;;;76     
;;;77       NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;			//使能按键所在的外部中断通道
000072  2006              MOVS     r0,#6
000074  f88d0000          STRB     r0,[sp,#0]
;;;78       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x02;	//抢占优先级2， 
000078  2002              MOVS     r0,#2
00007a  f88d0001          STRB     r0,[sp,#1]
;;;79       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;					//子优先级3
00007e  2003              MOVS     r0,#3
000080  f88d0002          STRB     r0,[sp,#2]
;;;80       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;								//使能外部中断通道
000084  2001              MOVS     r0,#1
000086  f88d0003          STRB     r0,[sp,#3]
;;;81       NVIC_Init(&NVIC_InitStructure); 
00008a  4668              MOV      r0,sp
00008c  f7fffffe          BL       NVIC_Init
;;;82      
;;;83       NVIC_InitStructure.NVIC_IRQChannel = EXTI3_IRQn;			//使能按键所在的外部中断通道
000090  2009              MOVS     r0,#9
000092  f88d0000          STRB     r0,[sp,#0]
;;;84       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x02;	//抢占优先级2 
000096  2002              MOVS     r0,#2
000098  f88d0001          STRB     r0,[sp,#1]
;;;85       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x01;					//子优先级1 
00009c  2001              MOVS     r0,#1
00009e  f88d0002          STRB     r0,[sp,#2]
;;;86       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;								//使能外部中断通道
0000a2  f88d0003          STRB     r0,[sp,#3]
;;;87       NVIC_Init(&NVIC_InitStructure);  	  //根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器
0000a6  4668              MOV      r0,sp
0000a8  f7fffffe          BL       NVIC_Init
;;;88     
;;;89     	NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;			//使能按键所在的外部中断通道
0000ac  200a              MOVS     r0,#0xa
0000ae  f88d0000          STRB     r0,[sp,#0]
;;;90       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x02;	//抢占优先级2 
0000b2  2002              MOVS     r0,#2
0000b4  f88d0001          STRB     r0,[sp,#1]
;;;91       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x00;					//子优先级0 
0000b8  2000              MOVS     r0,#0
0000ba  f88d0002          STRB     r0,[sp,#2]
;;;92       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;								//使能外部中断通道
0000be  2001              MOVS     r0,#1
0000c0  f88d0003          STRB     r0,[sp,#3]
;;;93       NVIC_Init(&NVIC_InitStructure);  	  //根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器
0000c4  4668              MOV      r0,sp
0000c6  f7fffffe          BL       NVIC_Init
;;;94     		 
;;;95     }
0000ca  bd0e              POP      {r1-r3,pc}
;;;96     u8 ov_sta;	//帧中断标记
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  ov_sta
000000  00                DCB      0x00
