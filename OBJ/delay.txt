; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\delay.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\delay.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\ATK-ESP8266 -I..\CORE -I..\FATFS\src -I..\FATFS\exfuns -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\LED -I..\HARDWARE\SDIO -I..\HARDWARE\SPI -I..\HARDWARE\TIMER -I..\HARDWARE\TOUCH -I..\HARDWARE\USART3 -I..\HARDWARE\W25QXX -I..\MALLOC -I..\STM32F10x_FWLib\inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\TEXT -I..\USER -I..\USMART -I..\PICTURE -I..\HARDWARE\OV7725 -I..\HARDWARE\EXTI -I..\HARDWARE\BEEP -I..\HARDWARE\DHT11 -I.\RTE\_Target_1 -ID:\Users\86132\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\delay.crf ..\SYSTEM\delay\delay.c]
                          THUMB

                          AREA ||i.delay||, CODE, READONLY, ALIGN=1

                  delay PROC
;;;185    //粗略的delay秒！
;;;186    void delay(u32 sec) 
000000  b530              PUSH     {r4,r5,lr}
;;;187    {
000002  4604              MOV      r4,r0
;;;188    	u32 i;
;;;189    	for(i=0;i<sec;i++)
000004  2500              MOVS     r5,#0
000006  e004              B        |L1.18|
                  |L1.8|
;;;190    	{
;;;191    		delay_ms(1000);
000008  f44f707a          MOV      r0,#0x3e8
00000c  f7fffffe          BL       delay_ms
000010  1c6d              ADDS     r5,r5,#1              ;189
                  |L1.18|
000012  42a5              CMP      r5,r4                 ;189
000014  d3f8              BCC      |L1.8|
;;;192    	}
;;;193    }
000016  bd30              POP      {r4,r5,pc}
;;;194    #endif 
                          ENDP


                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;88     //SYSCLK:系统时钟
;;;89     void delay_init()
000000  b510              PUSH     {r4,lr}
;;;90     {
;;;91     #if SYSTEM_SUPPORT_OS  							//如果需要支持OS.
;;;92     	u32 reload;
;;;93     #endif
;;;94     	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);	//选择外部时钟  HCLK/8
000002  f06f0004          MVN      r0,#4
000006  f7fffffe          BL       SysTick_CLKSourceConfig
;;;95     	fac_us=SystemCoreClock/8000000;				//为系统时钟的1/8  
00000a  480a              LDR      r0,|L2.52|
00000c  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00000e  490a              LDR      r1,|L2.56|
000010  fbb0f0f1          UDIV     r0,r0,r1
000014  4909              LDR      r1,|L2.60|
000016  7008              STRB     r0,[r1,#0]
;;;96     #if SYSTEM_SUPPORT_OS  							//如果需要支持OS.
;;;97     	reload=SystemCoreClock/8000000;				//每秒钟的计数次数 单位为K	   
;;;98     	reload*=1000000/delay_ostickspersec;		//根据delay_ostickspersec设定溢出时间
;;;99     												//reload为24位寄存器,最大值:16777216,在72M下,约合1.86s左右	
;;;100    	fac_ms=1000/delay_ostickspersec;			//代表OS可以延时的最少单位	   
;;;101    
;;;102    	SysTick->CTRL|=SysTick_CTRL_TICKINT_Msk;   	//开启SYSTICK中断
;;;103    	SysTick->LOAD=reload; 						//每1/delay_ostickspersec秒中断一次	
;;;104    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk;   	//开启SYSTICK    
;;;105    
;;;106    #else
;;;107    	fac_ms=(u16)fac_us*1000;					//非OS下,代表每个ms需要的systick时钟数   
000018  4608              MOV      r0,r1
00001a  7800              LDRB     r0,[r0,#0]  ; fac_us
00001c  eb000140          ADD      r1,r0,r0,LSL #1
000020  ebc110c0          RSB      r0,r1,r0,LSL #7
000024  f64f71ff          MOV      r1,#0xffff
000028  ea0100c0          AND      r0,r1,r0,LSL #3
00002c  4904              LDR      r1,|L2.64|
00002e  8008              STRH     r0,[r1,#0]
;;;108    #endif
;;;109    }								    
000030  bd10              POP      {r4,pc}
;;;110    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      SystemCoreClock
                  |L2.56|
                          DCD      0x007a1200
                  |L2.60|
                          DCD      fac_us
                  |L2.64|
                          DCD      fac_ms

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;171    //对72M条件下,nms<=1864 
;;;172    void delay_ms(u16 nms)
000000  4601              MOV      r1,r0
;;;173    {	 		  	  
;;;174    	u32 temp;		   
;;;175    	SysTick->LOAD=(u32)nms*fac_ms;				//时间加载(SysTick->LOAD为24bit)
000002  4a11              LDR      r2,|L3.72|
000004  8812              LDRH     r2,[r2,#0]  ; fac_ms
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;176    	SysTick->VAL =0x00;							//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;177    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数  
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;178    	do
00001c  bf00              NOP      
                  |L3.30|
;;;179    	{
;;;180    		temp=SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;181    	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L3.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L3.30|
                  |L3.50|
;;;182    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;183    	SysTick->VAL =0X00;       					//清空计数器	  	    
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;184    } 
000046  4770              BX       lr
;;;185    //粗略的delay秒！
                          ENDP

                  |L3.72|
                          DCD      fac_ms

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;152    //nus为要延时的us数.		    								   
;;;153    void delay_us(u32 nus)
000000  4601              MOV      r1,r0
;;;154    {		
;;;155    	u32 temp;	    	 
;;;156    	SysTick->LOAD=nus*fac_us; 					//时间加载	  		 
000002  4a11              LDR      r2,|L4.72|
000004  7812              LDRB     r2,[r2,#0]  ; fac_us
000006  434a              MULS     r2,r1,r2
000008  f04f23e0          MOV      r3,#0xe000e000
00000c  615a              STR      r2,[r3,#0x14]
;;;157    	SysTick->VAL=0x00;        					//清空计数器
00000e  2200              MOVS     r2,#0
000010  619a              STR      r2,[r3,#0x18]
;;;158    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;	//开始倒数	  
000012  461a              MOV      r2,r3
000014  6912              LDR      r2,[r2,#0x10]
000016  f0420201          ORR      r2,r2,#1
00001a  611a              STR      r2,[r3,#0x10]
;;;159    	do
00001c  bf00              NOP      
                  |L4.30|
;;;160    	{
;;;161    		temp=SysTick->CTRL;
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6910              LDR      r0,[r2,#0x10]
;;;162    	}while((temp&0x01)&&!(temp&(1<<16)));		//等待时间到达   
000024  f0000201          AND      r2,r0,#1
000028  b11a              CBZ      r2,|L4.50|
00002a  f4003280          AND      r2,r0,#0x10000
00002e  2a00              CMP      r2,#0
000030  d0f5              BEQ      |L4.30|
                  |L4.50|
;;;163    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;	//关闭计数器
000032  f04f22e0          MOV      r2,#0xe000e000
000036  6912              LDR      r2,[r2,#0x10]
000038  f0220201          BIC      r2,r2,#1
00003c  f04f23e0          MOV      r3,#0xe000e000
000040  611a              STR      r2,[r3,#0x10]
;;;164    	SysTick->VAL =0X00;      					 //清空计数器	 
000042  2200              MOVS     r2,#0
000044  619a              STR      r2,[r3,#0x18]
;;;165    }
000046  4770              BX       lr
;;;166    //延时nms
                          ENDP

                  |L4.72|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
