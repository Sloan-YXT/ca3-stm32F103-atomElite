; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\obj\ov7725.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\ov7725.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\ATK-ESP8266 -I..\CORE -I..\FATFS\src -I..\FATFS\exfuns -I..\HARDWARE\24CXX -I..\HARDWARE\IIC -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\LED -I..\HARDWARE\SDIO -I..\HARDWARE\SPI -I..\HARDWARE\TIMER -I..\HARDWARE\TOUCH -I..\HARDWARE\USART3 -I..\HARDWARE\W25QXX -I..\MALLOC -I..\STM32F10x_FWLib\inc -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\TEXT -I..\USER -I..\USMART -I..\PICTURE -I..\HARDWARE\OV7725 -I..\HARDWARE\EXTI -I..\HARDWARE\BEEP -I..\HARDWARE\DHT11 -I.\RTE\_Target_1 -ID:\Users\86132\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\ov7725.crf ..\HARDWARE\OV7725\ov7725.c]
                          THUMB

                          AREA ||i.OV7725_Brightness||, CODE, READONLY, ALIGN=1

                  OV7725_Brightness PROC
;;;139    //bright：-4~+4
;;;140    void OV7725_Brightness(s8 bright)
000000  b570              PUSH     {r4-r6,lr}
;;;141    {
000002  4606              MOV      r6,r0
;;;142    	u8 bright_value,sign;
;;;143      	switch(bright)
000004  1d30              ADDS     r0,r6,#4
000006  2809              CMP      r0,#9
000008  d221              BCS      |L1.78|
00000a  e8dff000          TBB      [pc,r0]
00000e  1d1a              DCB      0x1d,0x1a
000010  1714110e          DCB      0x17,0x14,0x11,0x0e
000014  0b080500          DCB      0x0b,0x08,0x05,0x00
;;;144    	{
;;;145    		case 4:
;;;146    			bright_value = 0x48;
000018  2448              MOVS     r4,#0x48
;;;147    			sign = 0x06;
00001a  2506              MOVS     r5,#6
;;;148    			break;
00001c  e017              B        |L1.78|
;;;149    		case 3:
;;;150    			bright_value = 0x38;
00001e  2438              MOVS     r4,#0x38
;;;151    			sign = 0x06;		
000020  2506              MOVS     r5,#6
;;;152    			break;	
000022  e014              B        |L1.78|
;;;153    		case 2:
;;;154    			bright_value = 0x28;
000024  2428              MOVS     r4,#0x28
;;;155    			sign = 0x06;			
000026  2506              MOVS     r5,#6
;;;156    			break;	
000028  e011              B        |L1.78|
;;;157    		case 1:
;;;158    			bright_value = 0x18;
00002a  2418              MOVS     r4,#0x18
;;;159    			sign = 0x06;			
00002c  2506              MOVS     r5,#6
;;;160    			break;
00002e  e00e              B        |L1.78|
;;;161    		case 0:
;;;162    			bright_value = 0x08;
000030  2408              MOVS     r4,#8
;;;163    			sign = 0x06;			
000032  2506              MOVS     r5,#6
;;;164    			break;	
000034  e00b              B        |L1.78|
;;;165    		case -1:
;;;166    			bright_value = 0x08;
000036  2408              MOVS     r4,#8
;;;167    			sign = 0x0e;		
000038  250e              MOVS     r5,#0xe
;;;168    			break;		
00003a  e008              B        |L1.78|
;;;169    		case -2:
;;;170    			bright_value = 0x18;
00003c  2418              MOVS     r4,#0x18
;;;171    			sign = 0x0e;		
00003e  250e              MOVS     r5,#0xe
;;;172    			break;	
000040  e005              B        |L1.78|
;;;173    		case -3:
;;;174    			bright_value = 0x28;
000042  2428              MOVS     r4,#0x28
;;;175    			sign = 0x0e;		
000044  250e              MOVS     r5,#0xe
;;;176    			break;	
000046  e002              B        |L1.78|
;;;177    		case -4:
;;;178    			bright_value = 0x38;
000048  2438              MOVS     r4,#0x38
;;;179    			sign = 0x0e;		
00004a  250e              MOVS     r5,#0xe
;;;180    			break;	
00004c  bf00              NOP      
                  |L1.78|
00004e  bf00              NOP                            ;148
;;;181    	}
;;;182    	SCCB_WR_Reg(BRIGHT, bright_value);
000050  4621              MOV      r1,r4
000052  209b              MOVS     r0,#0x9b
000054  f7fffffe          BL       SCCB_WR_Reg
;;;183    	SCCB_WR_Reg(SIGN, sign);
000058  4629              MOV      r1,r5
00005a  20ab              MOVS     r0,#0xab
00005c  f7fffffe          BL       SCCB_WR_Reg
;;;184    }
000060  bd70              POP      {r4-r6,pc}
;;;185    //对比度设置
                          ENDP


                          AREA ||i.OV7725_Color_Saturation||, CODE, READONLY, ALIGN=1

                  OV7725_Color_Saturation PROC
;;;129    //sat:-4~+4
;;;130    void OV7725_Color_Saturation(s8 sat)
000000  b510              PUSH     {r4,lr}
;;;131    {
000002  4604              MOV      r4,r0
;;;132     	if(sat>=-4 && sat<=4)
000004  f1140f04          CMN      r4,#4
000008  db0d              BLT      |L2.38|
00000a  2c04              CMP      r4,#4
00000c  dc0b              BGT      |L2.38|
;;;133    	{	
;;;134    		SCCB_WR_Reg(USAT,(sat+4)<<4); 
00000e  1d20              ADDS     r0,r4,#4
000010  0700              LSLS     r0,r0,#28
000012  0e01              LSRS     r1,r0,#24
000014  20a7              MOVS     r0,#0xa7
000016  f7fffffe          BL       SCCB_WR_Reg
;;;135    		SCCB_WR_Reg(VSAT,(sat+4)<<4);
00001a  1d20              ADDS     r0,r4,#4
00001c  0700              LSLS     r0,r0,#28
00001e  0e01              LSRS     r1,r0,#24
000020  20a8              MOVS     r0,#0xa8
000022  f7fffffe          BL       SCCB_WR_Reg
                  |L2.38|
;;;136    	}
;;;137    }
000026  bd10              POP      {r4,pc}
;;;138    //亮度设置
                          ENDP


                          AREA ||i.OV7725_Contrast||, CODE, READONLY, ALIGN=1

                  OV7725_Contrast PROC
;;;186    //contrast：-4~+4
;;;187    void OV7725_Contrast(s8 contrast)
000000  b510              PUSH     {r4,lr}
;;;188    {
000002  4604              MOV      r4,r0
;;;189    	if(contrast >= -4 && contrast <=4)
000004  f1140f04          CMN      r4,#4
000008  db0a              BLT      |L3.32|
00000a  2c04              CMP      r4,#4
00000c  dc08              BGT      |L3.32|
;;;190    	{
;;;191    		SCCB_WR_Reg(CNST,(0x30-(4-contrast)*4));
00000e  f1c40004          RSB      r0,r4,#4
000012  2230              MOVS     r2,#0x30
000014  eba20080          SUB      r0,r2,r0,LSL #2
000018  b2c1              UXTB     r1,r0
00001a  209c              MOVS     r0,#0x9c
00001c  f7fffffe          BL       SCCB_WR_Reg
                  |L3.32|
;;;192    	}
;;;193    }
000020  bd10              POP      {r4,pc}
;;;194    //特效设置
                          ENDP


                          AREA ||i.OV7725_Init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  OV7725_Init PROC
;;;1      #ifndef __SCCB_H
;;;7      u8 OV7725_Init(void)
000000  b538              PUSH     {r3-r5,lr}
;;;8      {
;;;9      	u16 i=0;
000002  2500              MOVS     r5,#0
;;;10     	u16 reg=0;
000004  2400              MOVS     r4,#0
;;;11     	//设置IO
;;;12      	GPIO_InitTypeDef  GPIO_InitStructure;
;;;13      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOB|RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOD|RCC_APB2Periph_GPIOG|RCC_APB2Periph_AFIO, ENABLE);//使能相关端口时钟
000006  2101              MOVS     r1,#1
000008  f240103d          MOV      r0,#0x13d
00000c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;14      
;;;15     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_8; 	//PA8 输入 上拉
000010  f44f7080          MOV      r0,#0x100
000014  f8ad0000          STRH     r0,[sp,#0]
;;;16     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000018  2048              MOVS     r0,#0x48
00001a  f88d0003          STRB     r0,[sp,#3]
;;;17     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001e  2003              MOVS     r0,#3
000020  f88d0002          STRB     r0,[sp,#2]
;;;18      	GPIO_Init(GPIOA, &GPIO_InitStructure);
000024  4669              MOV      r1,sp
000026  4845              LDR      r0,|L4.316|
000028  f7fffffe          BL       GPIO_Init
;;;19     	GPIO_SetBits(GPIOA,GPIO_Pin_8);
00002c  f44f7180          MOV      r1,#0x100
000030  4842              LDR      r0,|L4.316|
000032  f7fffffe          BL       GPIO_SetBits
;;;20     		
;;;21      	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3|GPIO_Pin_4;	 // 端口配置
000036  2018              MOVS     r0,#0x18
000038  f8ad0000          STRH     r0,[sp,#0]
;;;22      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
00003c  2010              MOVS     r0,#0x10
00003e  f88d0003          STRB     r0,[sp,#3]
;;;23      	GPIO_Init(GPIOB, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  483e              LDR      r0,|L4.320|
000046  f7fffffe          BL       GPIO_Init
;;;24      	GPIO_SetBits(GPIOB,GPIO_Pin_3|GPIO_Pin_4);	
00004a  2118              MOVS     r1,#0x18
00004c  483c              LDR      r0,|L4.320|
00004e  f7fffffe          BL       GPIO_SetBits
;;;25     
;;;26     	
;;;27     	GPIO_InitStructure.GPIO_Pin  = 0xff; //PC0~7 输入 上拉
000052  20ff              MOVS     r0,#0xff
000054  f8ad0000          STRH     r0,[sp,#0]
;;;28     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000058  2048              MOVS     r0,#0x48
00005a  f88d0003          STRB     r0,[sp,#3]
;;;29      	GPIO_Init(GPIOC, &GPIO_InitStructure);
00005e  4669              MOV      r1,sp
000060  4838              LDR      r0,|L4.324|
000062  f7fffffe          BL       GPIO_Init
;;;30     	 
;;;31     	
;;;32     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_6;  
000066  2040              MOVS     r0,#0x40
000068  f8ad0000          STRH     r0,[sp,#0]
;;;33     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00006c  2010              MOVS     r0,#0x10
00006e  f88d0003          STRB     r0,[sp,#3]
;;;34      	GPIO_Init(GPIOD, &GPIO_InitStructure);
000072  4669              MOV      r1,sp
000074  4834              LDR      r0,|L4.328|
000076  f7fffffe          BL       GPIO_Init
;;;35     	GPIO_SetBits(GPIOD,GPIO_Pin_6);
00007a  2140              MOVS     r1,#0x40
00007c  4832              LDR      r0,|L4.328|
00007e  f7fffffe          BL       GPIO_SetBits
;;;36     	
;;;37     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_14|GPIO_Pin_15;  
000082  f44f4040          MOV      r0,#0xc000
000086  f8ad0000          STRH     r0,[sp,#0]
;;;38     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00008a  2010              MOVS     r0,#0x10
00008c  f88d0003          STRB     r0,[sp,#3]
;;;39      	GPIO_Init(GPIOG, &GPIO_InitStructure);
000090  4669              MOV      r1,sp
000092  482e              LDR      r0,|L4.332|
000094  f7fffffe          BL       GPIO_Init
;;;40     	GPIO_SetBits(GPIOG,GPIO_Pin_14|GPIO_Pin_15);
000098  f44f4140          MOV      r1,#0xc000
00009c  482b              LDR      r0,|L4.332|
00009e  f7fffffe          BL       GPIO_SetBits
;;;41     	
;;;42     	GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);	//SWD
0000a2  2101              MOVS     r1,#1
0000a4  482a              LDR      r0,|L4.336|
0000a6  f7fffffe          BL       GPIO_PinRemapConfig
;;;43      
;;;44     	SCCB_Init();        		//初始化SCCB 的IO口	
0000aa  f7fffffe          BL       SCCB_Init
;;;45      	if(SCCB_WR_Reg(0x12,0x80))return 1;	//软复位OV7725
0000ae  2180              MOVS     r1,#0x80
0000b0  2012              MOVS     r0,#0x12
0000b2  f7fffffe          BL       SCCB_WR_Reg
0000b6  b108              CBZ      r0,|L4.188|
0000b8  2001              MOVS     r0,#1
                  |L4.186|
;;;46     	delay_ms(50); 
;;;47     	reg=SCCB_RD_Reg(0X1c);		//读取厂家ID 高八位
;;;48     	reg<<=8;
;;;49     	reg|=SCCB_RD_Reg(0X1d);		//读取厂家ID 低八位
;;;50     	if(reg!=OV7725_MID)
;;;51     	{
;;;52     		printf("MID:%d\r\n",reg);
;;;53     		return 1;
;;;54     	}
;;;55     	reg=SCCB_RD_Reg(0X0a);		//读取厂家ID 高八位
;;;56     	reg<<=8;
;;;57     	reg|=SCCB_RD_Reg(0X0b);		//读取厂家ID 低八位
;;;58     	if(reg!=OV7725_PID)
;;;59     	{
;;;60     		printf("HID:%d\r\n",reg);
;;;61     		return 2;
;;;62     	}   
;;;63      	//初始化 OV7725,采用QVGA分辨率(320*240)  
;;;64     	for(i=0;i<sizeof(ov7725_init_reg_tb1)/sizeof(ov7725_init_reg_tb1[0]);i++)
;;;65     	{								
;;;66     	   	SCCB_WR_Reg(ov7725_init_reg_tb1[i][0],ov7725_init_reg_tb1[i][1]);
;;;67      	} 
;;;68       	return 0x00; 	//ok
;;;69     } 
0000ba  bd38              POP      {r3-r5,pc}
                  |L4.188|
0000bc  2032              MOVS     r0,#0x32              ;46
0000be  f7fffffe          BL       delay_ms
0000c2  201c              MOVS     r0,#0x1c              ;47
0000c4  f7fffffe          BL       SCCB_RD_Reg
0000c8  4604              MOV      r4,r0                 ;47
0000ca  f64f70ff          MOV      r0,#0xffff            ;48
0000ce  ea002404          AND      r4,r0,r4,LSL #8       ;48
0000d2  201d              MOVS     r0,#0x1d              ;49
0000d4  f7fffffe          BL       SCCB_RD_Reg
0000d8  4304              ORRS     r4,r4,r0              ;49
0000da  f64770a2          MOV      r0,#0x7fa2            ;50
0000de  4284              CMP      r4,r0                 ;50
0000e0  d005              BEQ      |L4.238|
0000e2  4621              MOV      r1,r4                 ;52
0000e4  a01b              ADR      r0,|L4.340|
0000e6  f7fffffe          BL       __2printf
0000ea  2001              MOVS     r0,#1                 ;53
0000ec  e7e5              B        |L4.186|
                  |L4.238|
0000ee  200a              MOVS     r0,#0xa               ;55
0000f0  f7fffffe          BL       SCCB_RD_Reg
0000f4  4604              MOV      r4,r0                 ;55
0000f6  f64f70ff          MOV      r0,#0xffff            ;56
0000fa  ea002404          AND      r4,r0,r4,LSL #8       ;56
0000fe  200b              MOVS     r0,#0xb               ;57
000100  f7fffffe          BL       SCCB_RD_Reg
000104  4304              ORRS     r4,r4,r0              ;57
000106  f2477021          MOV      r0,#0x7721            ;58
00010a  4284              CMP      r4,r0                 ;58
00010c  d005              BEQ      |L4.282|
00010e  4621              MOV      r1,r4                 ;60
000110  a013              ADR      r0,|L4.352|
000112  f7fffffe          BL       __2printf
000116  2002              MOVS     r0,#2                 ;61
000118  e7cf              B        |L4.186|
                  |L4.282|
00011a  2500              MOVS     r5,#0                 ;64
00011c  e00a              B        |L4.308|
                  |L4.286|
00011e  4a13              LDR      r2,|L4.364|
000120  eb020245          ADD      r2,r2,r5,LSL #1       ;66
000124  7851              LDRB     r1,[r2,#1]            ;66
000126  4a11              LDR      r2,|L4.364|
000128  f8120015          LDRB     r0,[r2,r5,LSL #1]     ;66
00012c  f7fffffe          BL       SCCB_WR_Reg
000130  1c68              ADDS     r0,r5,#1              ;64
000132  b285              UXTH     r5,r0                 ;64
                  |L4.308|
000134  2d41              CMP      r5,#0x41              ;64
000136  d3f2              BCC      |L4.286|
000138  2000              MOVS     r0,#0                 ;68
00013a  e7be              B        |L4.186|
;;;70     ////////////////////////////////////////////////////////////////////////////
                          ENDP

                  |L4.316|
                          DCD      0x40010800
                  |L4.320|
                          DCD      0x40010c00
                  |L4.324|
                          DCD      0x40011000
                  |L4.328|
                          DCD      0x40011400
                  |L4.332|
                          DCD      0x40012000
                  |L4.336|
                          DCD      0x00300200
                  |L4.340|
000154  4d49443a          DCB      "MID:%d\r\n",0
000158  25640d0a
00015c  00      
00015d  00                DCB      0
00015e  00                DCB      0
00015f  00                DCB      0
                  |L4.352|
000160  4849443a          DCB      "HID:%d\r\n",0
000164  25640d0a
000168  00      
000169  00                DCB      0
00016a  00                DCB      0
00016b  00                DCB      0
                  |L4.364|
                          DCD      ov7725_init_reg_tb1

                          AREA ||i.OV7725_Light_Mode||, CODE, READONLY, ALIGN=1

                  OV7725_Light_Mode PROC
;;;78     //5,夜晚
;;;79     void OV7725_Light_Mode(u8 mode)
000000  b510              PUSH     {r4,lr}
;;;80     {
000002  4604              MOV      r4,r0
;;;81     	switch(mode)
000004  2c06              CMP      r4,#6
000006  d214              BCS      |L5.50|
000008  e8dff004          TBB      [pc,r4]
00000c  03142d46          DCB      0x03,0x14,0x2d,0x46
000010  5f78              DCB      0x5f,0x78
;;;82     	{
;;;83     		case 0:	//Auto，自动模式
;;;84     			SCCB_WR_Reg(0x13, 0xff); //AWB on 
000012  21ff              MOVS     r1,#0xff
000014  2013              MOVS     r0,#0x13
000016  f7fffffe          BL       SCCB_WR_Reg
;;;85     			SCCB_WR_Reg(0x0e, 0x65);
00001a  2165              MOVS     r1,#0x65
00001c  200e              MOVS     r0,#0xe
00001e  f7fffffe          BL       SCCB_WR_Reg
;;;86     			SCCB_WR_Reg(0x2d, 0x00);
000022  2100              MOVS     r1,#0
000024  202d              MOVS     r0,#0x2d
000026  f7fffffe          BL       SCCB_WR_Reg
;;;87     			SCCB_WR_Reg(0x2e, 0x00);
00002a  2100              MOVS     r1,#0
00002c  202e              MOVS     r0,#0x2e
00002e  f7fffffe          BL       SCCB_WR_Reg
                  |L5.50|
;;;88     			break;
000032  e06c              B        |L5.270|
;;;89     		case 1://sunny，晴天
;;;90     			SCCB_WR_Reg(0x13, 0xfd); //AWB off
000034  21fd              MOVS     r1,#0xfd
000036  2013              MOVS     r0,#0x13
000038  f7fffffe          BL       SCCB_WR_Reg
;;;91     			SCCB_WR_Reg(0x01, 0x5a);
00003c  215a              MOVS     r1,#0x5a
00003e  2001              MOVS     r0,#1
000040  f7fffffe          BL       SCCB_WR_Reg
;;;92     			SCCB_WR_Reg(0x02, 0x5c);
000044  215c              MOVS     r1,#0x5c
000046  2002              MOVS     r0,#2
000048  f7fffffe          BL       SCCB_WR_Reg
;;;93     			SCCB_WR_Reg(0x0e, 0x65);
00004c  2165              MOVS     r1,#0x65
00004e  200e              MOVS     r0,#0xe
000050  f7fffffe          BL       SCCB_WR_Reg
;;;94     			SCCB_WR_Reg(0x2d, 0x00);
000054  2100              MOVS     r1,#0
000056  202d              MOVS     r0,#0x2d
000058  f7fffffe          BL       SCCB_WR_Reg
;;;95     			SCCB_WR_Reg(0x2e, 0x00);
00005c  2100              MOVS     r1,#0
00005e  202e              MOVS     r0,#0x2e
000060  f7fffffe          BL       SCCB_WR_Reg
;;;96     			break;	
000064  e053              B        |L5.270|
;;;97     		case 2://cloudy，多云
;;;98     			SCCB_WR_Reg(0x13, 0xfd); //AWB off
000066  21fd              MOVS     r1,#0xfd
000068  2013              MOVS     r0,#0x13
00006a  f7fffffe          BL       SCCB_WR_Reg
;;;99     			SCCB_WR_Reg(0x01, 0x58);
00006e  2158              MOVS     r1,#0x58
000070  2001              MOVS     r0,#1
000072  f7fffffe          BL       SCCB_WR_Reg
;;;100    			SCCB_WR_Reg(0x02, 0x60);
000076  2160              MOVS     r1,#0x60
000078  2002              MOVS     r0,#2
00007a  f7fffffe          BL       SCCB_WR_Reg
;;;101    			SCCB_WR_Reg(0x0e, 0x65);
00007e  2165              MOVS     r1,#0x65
000080  200e              MOVS     r0,#0xe
000082  f7fffffe          BL       SCCB_WR_Reg
;;;102    			SCCB_WR_Reg(0x2d, 0x00);
000086  2100              MOVS     r1,#0
000088  202d              MOVS     r0,#0x2d
00008a  f7fffffe          BL       SCCB_WR_Reg
;;;103    			SCCB_WR_Reg(0x2e, 0x00);
00008e  2100              MOVS     r1,#0
000090  202e              MOVS     r0,#0x2e
000092  f7fffffe          BL       SCCB_WR_Reg
;;;104    			break;	
000096  e03a              B        |L5.270|
;;;105    		case 3://office，办公室
;;;106    			SCCB_WR_Reg(0x13, 0xfd); //AWB off
000098  21fd              MOVS     r1,#0xfd
00009a  2013              MOVS     r0,#0x13
00009c  f7fffffe          BL       SCCB_WR_Reg
;;;107    			SCCB_WR_Reg(0x01, 0x84);
0000a0  2184              MOVS     r1,#0x84
0000a2  2001              MOVS     r0,#1
0000a4  f7fffffe          BL       SCCB_WR_Reg
;;;108    			SCCB_WR_Reg(0x02, 0x4c);
0000a8  214c              MOVS     r1,#0x4c
0000aa  2002              MOVS     r0,#2
0000ac  f7fffffe          BL       SCCB_WR_Reg
;;;109    			SCCB_WR_Reg(0x0e, 0x65);
0000b0  2165              MOVS     r1,#0x65
0000b2  200e              MOVS     r0,#0xe
0000b4  f7fffffe          BL       SCCB_WR_Reg
;;;110    			SCCB_WR_Reg(0x2d, 0x00);
0000b8  2100              MOVS     r1,#0
0000ba  202d              MOVS     r0,#0x2d
0000bc  f7fffffe          BL       SCCB_WR_Reg
;;;111    			SCCB_WR_Reg(0x2e, 0x00);
0000c0  2100              MOVS     r1,#0
0000c2  202e              MOVS     r0,#0x2e
0000c4  f7fffffe          BL       SCCB_WR_Reg
;;;112    			break;	
0000c8  e021              B        |L5.270|
;;;113    		case 4://home，家里
;;;114    			SCCB_WR_Reg(0x13, 0xfd); //AWB off
0000ca  21fd              MOVS     r1,#0xfd
0000cc  2013              MOVS     r0,#0x13
0000ce  f7fffffe          BL       SCCB_WR_Reg
;;;115    			SCCB_WR_Reg(0x01, 0x96);
0000d2  2196              MOVS     r1,#0x96
0000d4  2001              MOVS     r0,#1
0000d6  f7fffffe          BL       SCCB_WR_Reg
;;;116    			SCCB_WR_Reg(0x02, 0x40);
0000da  2140              MOVS     r1,#0x40
0000dc  2002              MOVS     r0,#2
0000de  f7fffffe          BL       SCCB_WR_Reg
;;;117    			SCCB_WR_Reg(0x0e, 0x65);
0000e2  2165              MOVS     r1,#0x65
0000e4  200e              MOVS     r0,#0xe
0000e6  f7fffffe          BL       SCCB_WR_Reg
;;;118    			SCCB_WR_Reg(0x2d, 0x00);
0000ea  2100              MOVS     r1,#0
0000ec  202d              MOVS     r0,#0x2d
0000ee  f7fffffe          BL       SCCB_WR_Reg
;;;119    			SCCB_WR_Reg(0x2e, 0x00);
0000f2  2100              MOVS     r1,#0
0000f4  202e              MOVS     r0,#0x2e
0000f6  f7fffffe          BL       SCCB_WR_Reg
;;;120    			break;	
0000fa  e008              B        |L5.270|
;;;121    
;;;122    		case 5://night，夜晚
;;;123    			SCCB_WR_Reg(0x13, 0xff); //AWB on
0000fc  21ff              MOVS     r1,#0xff
0000fe  2013              MOVS     r0,#0x13
000100  f7fffffe          BL       SCCB_WR_Reg
;;;124    			SCCB_WR_Reg(0x0e, 0xe5);
000104  21e5              MOVS     r1,#0xe5
000106  200e              MOVS     r0,#0xe
000108  f7fffffe          BL       SCCB_WR_Reg
;;;125    			break;
00010c  bf00              NOP      
                  |L5.270|
00010e  bf00              NOP                            ;88
;;;126    	}
;;;127    }		  
000110  bd10              POP      {r4,pc}
;;;128    //色度设置
                          ENDP


                          AREA ||i.OV7725_Special_Effects||, CODE, READONLY, ALIGN=1

                  OV7725_Special_Effects PROC
;;;201    //6,复古	    
;;;202    void OV7725_Special_Effects(u8 eft)
000000  b510              PUSH     {r4,lr}
;;;203    {
000002  4604              MOV      r4,r0
;;;204    	switch(eft)
000004  2c07              CMP      r4,#7
000006  d258              BCS      |L6.186|
000008  e8dff004          TBB      [pc,r4]
00000c  04111623          DCB      0x04,0x11,0x16,0x23
000010  303d4a00          DCB      0x30,0x3d,0x4a,0x00
;;;205    	{
;;;206    		case 0://正常
;;;207    			SCCB_WR_Reg(0xa6, 0x06);//TSLB设置
000014  2106              MOVS     r1,#6
000016  20a6              MOVS     r0,#0xa6
000018  f7fffffe          BL       SCCB_WR_Reg
;;;208    			SCCB_WR_Reg(0x60, 0x80);//MANV,手动V值
00001c  2180              MOVS     r1,#0x80
00001e  2060              MOVS     r0,#0x60
000020  f7fffffe          BL       SCCB_WR_Reg
;;;209    			SCCB_WR_Reg(0x61, 0x80);//MANU,手动U值
000024  2180              MOVS     r1,#0x80
000026  2061              MOVS     r0,#0x61
000028  f7fffffe          BL       SCCB_WR_Reg
;;;210    			break;
00002c  e045              B        |L6.186|
;;;211    		case 1://负片
;;;212    			SCCB_WR_Reg(0xa6, 0x46);
00002e  2146              MOVS     r1,#0x46
000030  20a6              MOVS     r0,#0xa6
000032  f7fffffe          BL       SCCB_WR_Reg
;;;213    			break;
000036  e040              B        |L6.186|
;;;214    		case 2://黑白
;;;215    			SCCB_WR_Reg(0xa6, 0x26);
000038  2126              MOVS     r1,#0x26
00003a  20a6              MOVS     r0,#0xa6
00003c  f7fffffe          BL       SCCB_WR_Reg
;;;216    			SCCB_WR_Reg(0x60, 0x80);
000040  2180              MOVS     r1,#0x80
000042  2060              MOVS     r0,#0x60
000044  f7fffffe          BL       SCCB_WR_Reg
;;;217    			SCCB_WR_Reg(0x61, 0x80);
000048  2180              MOVS     r1,#0x80
00004a  2061              MOVS     r0,#0x61
00004c  f7fffffe          BL       SCCB_WR_Reg
;;;218    			break;		
000050  e033              B        |L6.186|
;;;219    		case 3://偏红
;;;220    			SCCB_WR_Reg(0xa6, 0x1e);
000052  211e              MOVS     r1,#0x1e
000054  20a6              MOVS     r0,#0xa6
000056  f7fffffe          BL       SCCB_WR_Reg
;;;221    			SCCB_WR_Reg(0x60, 0x80);
00005a  2180              MOVS     r1,#0x80
00005c  2060              MOVS     r0,#0x60
00005e  f7fffffe          BL       SCCB_WR_Reg
;;;222    			SCCB_WR_Reg(0x61, 0xc0);		
000062  21c0              MOVS     r1,#0xc0
000064  2061              MOVS     r0,#0x61
000066  f7fffffe          BL       SCCB_WR_Reg
;;;223    			break;
00006a  e026              B        |L6.186|
;;;224    		case 4://偏绿
;;;225    			SCCB_WR_Reg(0xa6, 0x1e);
00006c  211e              MOVS     r1,#0x1e
00006e  20a6              MOVS     r0,#0xa6
000070  f7fffffe          BL       SCCB_WR_Reg
;;;226    			SCCB_WR_Reg(0x60, 0x60);
000074  2160              MOVS     r1,#0x60
000076  4608              MOV      r0,r1
000078  f7fffffe          BL       SCCB_WR_Reg
;;;227    			SCCB_WR_Reg(0x61, 0x60);		
00007c  2160              MOVS     r1,#0x60
00007e  2061              MOVS     r0,#0x61
000080  f7fffffe          BL       SCCB_WR_Reg
;;;228    			break;
000084  e019              B        |L6.186|
;;;229    		case 5://偏蓝
;;;230    			SCCB_WR_Reg(0xa6, 0x1e);
000086  211e              MOVS     r1,#0x1e
000088  20a6              MOVS     r0,#0xa6
00008a  f7fffffe          BL       SCCB_WR_Reg
;;;231    			SCCB_WR_Reg(0x60, 0xa0);
00008e  21a0              MOVS     r1,#0xa0
000090  2060              MOVS     r0,#0x60
000092  f7fffffe          BL       SCCB_WR_Reg
;;;232    			SCCB_WR_Reg(0x61, 0x40);	
000096  2140              MOVS     r1,#0x40
000098  2061              MOVS     r0,#0x61
00009a  f7fffffe          BL       SCCB_WR_Reg
;;;233    			break;
00009e  e00c              B        |L6.186|
;;;234    		case 6://复古
;;;235    			SCCB_WR_Reg(0xa6, 0x1e);
0000a0  211e              MOVS     r1,#0x1e
0000a2  20a6              MOVS     r0,#0xa6
0000a4  f7fffffe          BL       SCCB_WR_Reg
;;;236    			SCCB_WR_Reg(0x60, 0x40);
0000a8  2140              MOVS     r1,#0x40
0000aa  2060              MOVS     r0,#0x60
0000ac  f7fffffe          BL       SCCB_WR_Reg
;;;237    			SCCB_WR_Reg(0x61, 0xa0);
0000b0  21a0              MOVS     r1,#0xa0
0000b2  2061              MOVS     r0,#0x61
0000b4  f7fffffe          BL       SCCB_WR_Reg
;;;238    			break;	
0000b8  bf00              NOP      
                  |L6.186|
0000ba  bf00              NOP                            ;210
;;;239    
;;;240    	}
;;;241    }	
0000bc  bd10              POP      {r4,pc}
;;;242    //设置图像输出窗口
                          ENDP


                          AREA ||i.OV7725_Window_Set||, CODE, READONLY, ALIGN=1

                  OV7725_Window_Set PROC
;;;246    //QVGA模式可视范围广但近物不是很清晰，VGA模式可视范围小近物清晰
;;;247    void OV7725_Window_Set(u16 width,u16 height,u8 mode)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;248    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4691              MOV      r9,r2
;;;249    	u8 raw,temp;
;;;250    	u16 sx,sy;
;;;251    	
;;;252    	if(mode)
00000a  f1b90f00          CMP      r9,#0
00000e  d02c              BEQ      |L7.106|
;;;253    	{
;;;254    		sx=(640-width)/2;
000010  f5c47020          RSB      r0,r4,#0x280
000014  eb0071d0          ADD      r1,r0,r0,LSR #31
000018  f3c1074f          UBFX     r7,r1,#1,#16
;;;255    		sy=(480-height)/2;
00001c  f5c570f0          RSB      r0,r5,#0x1e0
000020  eb0071d0          ADD      r1,r0,r0,LSR #31
000024  f3c1084f          UBFX     r8,r1,#1,#16
;;;256    		SCCB_WR_Reg(COM7,0x06);		//设置为VGA模式
000028  2106              MOVS     r1,#6
00002a  2012              MOVS     r0,#0x12
00002c  f7fffffe          BL       SCCB_WR_Reg
;;;257    		SCCB_WR_Reg(HSTART,0x23); 	//水平起始位置
000030  2123              MOVS     r1,#0x23
000032  2017              MOVS     r0,#0x17
000034  f7fffffe          BL       SCCB_WR_Reg
;;;258    		SCCB_WR_Reg(HSIZE,0xA0); 	//水平尺寸
000038  21a0              MOVS     r1,#0xa0
00003a  2018              MOVS     r0,#0x18
00003c  f7fffffe          BL       SCCB_WR_Reg
;;;259    		SCCB_WR_Reg(VSTRT,0x07); 	//垂直起始位置
000040  2107              MOVS     r1,#7
000042  2019              MOVS     r0,#0x19
000044  f7fffffe          BL       SCCB_WR_Reg
;;;260    		SCCB_WR_Reg(VSIZE,0xF0); 	//垂直尺寸
000048  21f0              MOVS     r1,#0xf0
00004a  201a              MOVS     r0,#0x1a
00004c  f7fffffe          BL       SCCB_WR_Reg
;;;261    		SCCB_WR_Reg(HREF,0x00);
000050  2100              MOVS     r1,#0
000052  2032              MOVS     r0,#0x32
000054  f7fffffe          BL       SCCB_WR_Reg
;;;262    		SCCB_WR_Reg(HOutSize,0xA0); //输出尺寸
000058  21a0              MOVS     r1,#0xa0
00005a  2029              MOVS     r0,#0x29
00005c  f7fffffe          BL       SCCB_WR_Reg
;;;263    		SCCB_WR_Reg(VOutSize,0xF0); //输出尺寸
000060  21f0              MOVS     r1,#0xf0
000062  202c              MOVS     r0,#0x2c
000064  f7fffffe          BL       SCCB_WR_Reg
000068  e02b              B        |L7.194|
                  |L7.106|
;;;264    	}
;;;265    	else
;;;266    	{
;;;267    		sx=(320-width)/2;
00006a  f5c470a0          RSB      r0,r4,#0x140
00006e  eb0071d0          ADD      r1,r0,r0,LSR #31
000072  f3c1074f          UBFX     r7,r1,#1,#16
;;;268    		sy=(240-height)/2;
000076  f1c500f0          RSB      r0,r5,#0xf0
00007a  eb0071d0          ADD      r1,r0,r0,LSR #31
00007e  f3c1084f          UBFX     r8,r1,#1,#16
;;;269    		SCCB_WR_Reg(COM7,0x46);		//设置为QVGA模式
000082  2146              MOVS     r1,#0x46
000084  2012              MOVS     r0,#0x12
000086  f7fffffe          BL       SCCB_WR_Reg
;;;270    		SCCB_WR_Reg(HSTART,0x3f); 	//水平起始位置
00008a  213f              MOVS     r1,#0x3f
00008c  2017              MOVS     r0,#0x17
00008e  f7fffffe          BL       SCCB_WR_Reg
;;;271    		SCCB_WR_Reg(HSIZE, 0x50); 	//水平尺寸
000092  2150              MOVS     r1,#0x50
000094  2018              MOVS     r0,#0x18
000096  f7fffffe          BL       SCCB_WR_Reg
;;;272    		SCCB_WR_Reg(VSTRT, 0x03); 	//垂直起始位置
00009a  2103              MOVS     r1,#3
00009c  2019              MOVS     r0,#0x19
00009e  f7fffffe          BL       SCCB_WR_Reg
;;;273    		SCCB_WR_Reg(VSIZE, 0x78); 	//垂直尺寸
0000a2  2178              MOVS     r1,#0x78
0000a4  201a              MOVS     r0,#0x1a
0000a6  f7fffffe          BL       SCCB_WR_Reg
;;;274    		SCCB_WR_Reg(HREF,  0x00);
0000aa  2100              MOVS     r1,#0
0000ac  2032              MOVS     r0,#0x32
0000ae  f7fffffe          BL       SCCB_WR_Reg
;;;275    		SCCB_WR_Reg(HOutSize,0x50);	//输出尺寸
0000b2  2150              MOVS     r1,#0x50
0000b4  2029              MOVS     r0,#0x29
0000b6  f7fffffe          BL       SCCB_WR_Reg
;;;276    		SCCB_WR_Reg(VOutSize,0x78); //输出尺寸
0000ba  2178              MOVS     r1,#0x78
0000bc  202c              MOVS     r0,#0x2c
0000be  f7fffffe          BL       SCCB_WR_Reg
                  |L7.194|
;;;277    	}
;;;278    	raw=SCCB_RD_Reg(HSTART);
0000c2  2017              MOVS     r0,#0x17
0000c4  f7fffffe          BL       SCCB_RD_Reg
0000c8  4606              MOV      r6,r0
;;;279    	temp=raw+(sx>>2);//sx高8位存在HSTART,低2位存在HREF[5:4]
0000ca  eb0600a7          ADD      r0,r6,r7,ASR #2
0000ce  f0000aff          AND      r10,r0,#0xff
;;;280    	SCCB_WR_Reg(HSTART,temp);
0000d2  4651              MOV      r1,r10
0000d4  2017              MOVS     r0,#0x17
0000d6  f7fffffe          BL       SCCB_WR_Reg
;;;281    	SCCB_WR_Reg(HSIZE,width>>2);//width高8位存在HSIZE,低2位存在HREF[1:0]
0000da  f3c40187          UBFX     r1,r4,#2,#8
0000de  2018              MOVS     r0,#0x18
0000e0  f7fffffe          BL       SCCB_WR_Reg
;;;282    	
;;;283    	raw=SCCB_RD_Reg(VSTRT);
0000e4  2019              MOVS     r0,#0x19
0000e6  f7fffffe          BL       SCCB_RD_Reg
0000ea  4606              MOV      r6,r0
;;;284    	temp=raw+(sy>>1);//sy高8位存在VSTRT,低1位存在HREF[6]
0000ec  eb060068          ADD      r0,r6,r8,ASR #1
0000f0  f0000aff          AND      r10,r0,#0xff
;;;285    	SCCB_WR_Reg(VSTRT,temp);
0000f4  4651              MOV      r1,r10
0000f6  2019              MOVS     r0,#0x19
0000f8  f7fffffe          BL       SCCB_WR_Reg
;;;286    	SCCB_WR_Reg(VSIZE,height>>1);//height高8位存在VSIZE,低1位存在HREF[2]
0000fc  f3c50147          UBFX     r1,r5,#1,#8
000100  201a              MOVS     r0,#0x1a
000102  f7fffffe          BL       SCCB_WR_Reg
;;;287    	
;;;288    	raw=SCCB_RD_Reg(HREF);
000106  2032              MOVS     r0,#0x32
000108  f7fffffe          BL       SCCB_RD_Reg
00010c  4606              MOV      r6,r0
;;;289    	temp=((sy&0x01)<<6)|((sx&0x03)<<4)|((height&0x01)<<2)|(width&0x03)|raw;
00010e  ea4f70c8          LSL      r0,r8,#31
000112  0e40              LSRS     r0,r0,#25
000114  f0070103          AND      r1,r7,#3
000118  ea401001          ORR      r0,r0,r1,LSL #4
00011c  f0050101          AND      r1,r5,#1
000120  ea400081          ORR      r0,r0,r1,LSL #2
000124  f0040103          AND      r1,r4,#3
000128  4308              ORRS     r0,r0,r1
00012a  ea400a06          ORR      r10,r0,r6
;;;290    	SCCB_WR_Reg(HREF,temp);
00012e  4651              MOV      r1,r10
000130  2032              MOVS     r0,#0x32
000132  f7fffffe          BL       SCCB_WR_Reg
;;;291    	
;;;292    	SCCB_WR_Reg(HOutSize,width>>2);
000136  f3c40187          UBFX     r1,r4,#2,#8
00013a  2029              MOVS     r0,#0x29
00013c  f7fffffe          BL       SCCB_WR_Reg
;;;293    	SCCB_WR_Reg(VOutSize,height>>1);
000140  f3c50147          UBFX     r1,r5,#1,#8
000144  202c              MOVS     r0,#0x2c
000146  f7fffffe          BL       SCCB_WR_Reg
;;;294    	
;;;295    	SCCB_RD_Reg(EXHCH);	
00014a  202a              MOVS     r0,#0x2a
00014c  f7fffffe          BL       SCCB_RD_Reg
;;;296    	temp = (raw|(width&0x03)|((height&0x01)<<2));	
000150  f0040003          AND      r0,r4,#3
000154  4330              ORRS     r0,r0,r6
000156  f0050101          AND      r1,r5,#1
00015a  ea400a81          ORR      r10,r0,r1,LSL #2
;;;297    	SCCB_WR_Reg(EXHCH,temp);	
00015e  4651              MOV      r1,r10
000160  202a              MOVS     r0,#0x2a
000162  f7fffffe          BL       SCCB_WR_Reg
;;;298    }
000166  e8bd87f0          POP      {r4-r10,pc}
;;;299    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  ov7725_init_reg_tb1
000000  11001246          DCB      0x11,0x00,0x12,0x46
000004  173f1850          DCB      0x17,0x3f,0x18,0x50
000008  19031a78          DCB      0x19,0x03,0x1a,0x78
00000c  32002950          DCB      0x32,0x00,0x29,0x50
000010  2c78427f          DCB      0x2c,0x78,0x42,0x7f
000014  4d0963e0          DCB      0x4d,0x09,0x63,0xe0
000018  64ff6500          DCB      0x64,0xff,0x65,0x00
00001c  66006700          DCB      0x66,0x00,0x67,0x00
000020  13f00d81          DCB      0x13,0xf0,0x0d,0x81
000024  0fc51411          DCB      0x0f,0xc5,0x14,0x11
000028  227f2303          DCB      0x22,0x7f,0x23,0x03
00002c  24402530          DCB      0x24,0x40,0x25,0x30
000030  26a12b9e          DCB      0x26,0xa1,0x2b,0x9e
000034  6baa13ff          DCB      0x6b,0xaa,0x13,0xff
000038  90089101          DCB      0x90,0x08,0x91,0x01
00003c  92039300          DCB      0x92,0x03,0x93,0x00
000040  94b0959d          DCB      0x94,0xb0,0x95,0x9d
000044  96139716          DCB      0x96,0x13,0x97,0x16
000048  987b9991          DCB      0x98,0x7b,0x99,0x91
00004c  9a1e9b08          DCB      0x9a,0x1e,0x9b,0x08
000050  9c209e81          DCB      0x9c,0x20,0x9e,0x81
000054  a606a765          DCB      0xa6,0x06,0xa7,0x65
000058  a865a980          DCB      0xa8,0x65,0xa9,0x80
00005c  aa807e0c          DCB      0xaa,0x80,0x7e,0x0c
000060  7f16802a          DCB      0x7f,0x16,0x80,0x2a
000064  814e8261          DCB      0x81,0x4e,0x82,0x61
000068  836f847b          DCB      0x83,0x6f,0x84,0x7b
00006c  8586868e          DCB      0x85,0x86,0x86,0x8e
000070  879788a4          DCB      0x87,0x97,0x88,0xa4
000074  89af8ac5          DCB      0x89,0xaf,0x8a,0xc5
000078  8bd78ce8          DCB      0x8b,0xd7,0x8c,0xe8
00007c  8d200c50          DCB      0x8d,0x20,0x0c,0x50
000080  0ef5              DCB      0x0e,0xf5
